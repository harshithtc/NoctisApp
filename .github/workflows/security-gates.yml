name: Security Gates (Mobile + Web)
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  android:
    name: Android release checks
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: android } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: '17' }
      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3
      - name: Assemble release (unsigned ok)
        run: ./gradlew clean :app:assembleRelease
      - name: Assert manifest flags
        run: |
          APK=$(ls app/build/outputs/apk/release/app-release*.apk | head -n1)
          echo "Using $APK"
          echo "----- Manifest -----"
          ${ANDROID_SDK_ROOT:-$ANDROID_HOME}/cmdline-tools/latest/bin/apkanalyzer manifest print "$APK" > manifest_release.xml
          grep -E 'usesCleartextTraffic="false"' manifest_release.xml
          grep -E 'allowBackup="false"' manifest_release.xml
          grep -E 'debuggable="false"' manifest_release.xml
      - name: Lint gates
        run: ./gradlew :app:lintRelease :app:lintVitalRelease
      - name: Confirm R8 mapping
        run: test -f app/build/outputs/mapping/release/mapping.txt

  ios:
    name: iOS ATS/signing sanity
    runs-on: macos-latest
    defaults: { run: { working-directory: ios } }
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with: { flutter-version: 'stable', channel: 'stable' }
      - name: CocoaPods
        run: pod install --repo-update
      - name: Archive (no signing export)
        run: |
          set -e
          xcodebuild -workspace Runner.xcworkspace -scheme Runner -configuration Release -sdk iphoneos -archivePath build/Runner.xcarchive clean archive
      - name: Assert ATS strict
        run: |
          ! /usr/libexec/PlistBuddy -c "Print :NSAppTransportSecurity:NSAllowsArbitraryLoads" build/Runner.xcarchive/Products/Applications/Runner.app/Info.plist || exit 1

  web:
    name: Web CSP + cache policy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with: { flutter-version: 'stable', channel: 'stable' }
      - name: Build web (no SW caching)
        run: flutter build web --release --pwa-strategy=none --dart-define=API_BASE_URL=https://api.example.com --dart-define=WS_BASE_URL=wss://api.example.com
      - name: Fail on weak CSP
        run: |
          FILE=build/web/index.html
          grep -qi "Content-Security-Policy" $FILE
          ! grep -qi "unsafe-eval" $FILE
          ! grep -qi "connect-src[^;]*\*" $FILE
          ! grep -qi "default-src[^;]*\*" $FILE

  secrets:
    name: Secrets scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --no-git -v
